# -*- coding: utf-8 -*-
"""Neural Signal.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1oZQ0dEU5enIgiDMqKU79-Sce1rNPkpoc

## Simulating a brain signal with RC circuits
"""

import numpy as np
from matplotlib import pyplot as plt 
from matplotlib import cm, colors
from scipy.integrate import odeint
from scipy.signal import square

# here we aim to simulate how a neural signal with electric potential V_s
# propagates in function of time, through every rc circuit

axon = Axon(N=100)

# timestep
timestep = 1e-6 
# where we stop at each timestep
T = 1e-2
# paces
num_time_steps = int(T/timestep)
# defining linspace for chart
time_steps = np.linspace(0, T, num_time_steps)

# solving a linear system of differential equations with scipy
solver = odeint(axon,axon.initial_conditions,time_steps)

# now plotting the solutions of the linear system we just solved
new_cmap = colors.LinearSegmentedColormap.from_list("", cm.get_cmap("Greens")(np.linspace(0.4, 1))) 

for i in range(0, num_time_steps, 1000):
    plt.plot(
        solver[i, :],
        label = f"time step = {i}",
        color = new_cmap(i/num_time_steps))

plt.plot(solver[-1, :], label="last time step", color="blue")
plt.legend()
plt.xlabel('Time (ms)')
plt.ylabel('Voltage (V)')
plt.title('Neural signal in function of time')
plt.show()